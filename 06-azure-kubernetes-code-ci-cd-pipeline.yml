trigger:
- main

resources:
  repositories:
  - repository: self

variables:
- name: dockerRegistryServiceConnection
  value: '574206fa-ecb5-4da2-8344-0f546fec341e'
- name: imageRepository
  value: 'presjkit/currency-exchange-devops'
- name: containerRegistry
  value: 'presjkit-docker-hub'
- name: dockerfilePath
  value: '**/Dockerfile'
- name: tag
  value: '$(Build.BuildId)'
- name: vmImageName
  value: 'ubuntu-latest'

stages:

# Stage 1
# Build Docker Image
# Publish the K8S Files

- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: 'buildAndPush'
        repository: $(imageRepository)
        Dockerfile: $(dockerfilePath)
        containerRegistry: $(containerRegistry)
        tags: |
          $(tag)
    - upload: manifests
      artifact: manifests
    # - task: CopyFiles@2
    #   inputs:
    #     SourceFolder: '$(System.DefaultWorkingDirectory)'
    #     Contents: |
    #       **/*.yaml
    #       **/*.yml
    #     TargetFolder: '$(Build.ArtifactStagingDirectory)'
    # - task: PublishBuildArtifacts@1
    #   inputs:
    #     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    #     ArtifactName: 'mainfests'
    #     publishLocation: 'Container'
- stage: Deploy
  displayName: Deploy stage
  jobs:  
   - deployment: Deploy
     displayName: Deploy
     pool:
      vmImage: $(vmImageName)
     environment:
      name: 'WowMillionaire777azuredevopskubernetesterraformpipeline.default'
     strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
          # - task: KubernetesManifest@0
          #   displayName: Create imagePullSecret
          #   inputs:
          #     action: createSecret
          #     secretName: $(imagePullSecret)
          #     dockerRegistryEndpoint: $(dockerRegistryServiceConnectio  
    # steps:
    # - task: KubernetesManifest@0
    #   displayName: Deploy app to K8S Cluster
    #   name: deploy
    #   inputs:
    #     action: 'deploy'
    #     kubernetesServiceConnection: 'azure-kubernetes-connection'
    #     namespace: 'default'
    #     manifests: '$(System.ArtifactsDirectory)/configuration/kubernetes/deployment.yaml'
    #     containers: 'presjkit/currency-exchange-devops:$(tag)'
# Stage 2
# Download the K8S Files
# Deploy to K8S Cluster with Docker Image
